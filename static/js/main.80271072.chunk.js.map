{"version":3,"sources":["components/Artist/Artist.js","components/MediaPlayer/MediaControl.js","components/MediaPlayer/MediaPlayer.js","data.js","components/Track/TrackList.js","components/Album/Album.js","App.js","serviceWorker.js","index.js"],"names":["Artist","react_default","a","createElement","className","src","alt","Volume","controls","MediaControl","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlePlayPause","media","playPause","state","bind","assertThisInitialized","_this$props","toggleFullScreen","onClick","isPlaying","style","verticalAlign","React","Component","withMediaProps","SeekBar","Progress","MediaPlayer","setState","isFullScreen","track","mediaPlayerContainerClass","react_media_player","backgroundImage","concat","cover","display","width","title","artist","url","MediaPlayer_MediaControl","data","id","album","duration","TrackList","currentTrack","isActive","handleMusicOnChange","_this$state","item","map","background","color","components_MediaPlayer_MediaPlayer","Album","App","components_Artist_Artist","Track_TrackList","components_Album_Album","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80271072.chunk.js","sourcesContent":["import React from 'react';\n\nconst Artist = () => {\n  return (\n    <div className=\"artist\">\n      <img src=\"https://picsum.photos/540\" alt=\"artist\" className=\"ui fluid image\"/>\n      <div className=\"ui huge header\">Richard Green</div>\n      <div className=\"ui bottom aligned grid\">\n        <div className=\"four wide column\">\n          <h3>FOLLOWERS</h3>\n          <div className=\"sub header\">5,790</div>\n        </div>\n        <div className=\"twelve wide column\">\n         <button className=\"ui black basic huge button\">FOLLOW</button>\n         <button className=\"ui orange huge button\">PLAY</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Artist","import React from 'react';\nimport { withMediaProps, controls } from 'react-media-player';\nconst { Volume } = controls;\n\nclass MediaControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n    this.handlePlayPause = this.handlePlayPause.bind(this);\n  }\n\n  handlePlayPause = () => {\n    this.props.media.playPause();\n  }\n\n\n  render() {\n    const { media, toggleFullScreen } = this.props;\n    const { handlePlayPause } = this;\n    return (\n      <div className=\"ten wide column current-track-control middle aligned ui grid\">\n        <div className=\"seven wide column\">\n          <button className=\"ui icon black big button\">\n            <i className=\"step backward icon\"></i>\n          </button>\n          <button className=\"ui icon button cta\" onClick={handlePlayPause}>\n            { media.isPlaying ? <i className=\"pause icon\"></i> : <i className=\"play icon\"></i> }\n          </button>\n          <button className=\"ui icon black big button\">\n            <i className=\"step forward icon\"></i>\n          </button>\n        </div>\n        <div className=\"nine wide right aligned column\">\n          <Volume />\n          <button className=\"ui icon button\" onClick={toggleFullScreen}>\n            <i className=\"expand icon\" style={{verticalAlign: \"text-top\"}}></i>\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withMediaProps(MediaControl)","import React from 'react';\nimport { Media, Player, controls } from 'react-media-player';\nimport MediaControl from './MediaControl';\nconst { SeekBar, Progress } = controls;\n\nclass MediaPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFullScreen: false,\n    };\n  }\n\n  toggleFullScreen = () => {\n    this.setState({\n      isFullScreen: !this.state.isFullScreen,\n    })\n  }\n\n  render() {\n    const { track } = this.props;\n    let mediaPlayerContainerClass = \"ui middle aligned grid current-track-container\";\n    if (this.state.isFullScreen) {\n      mediaPlayerContainerClass = \"ui bottom aligned grid current-track-container fullscreen\";\n    }\n    return (\n      <Media>\n        <div className={mediaPlayerContainerClass}>\n          <div className=\"current-track-container-bg\" style={ this.state.isFullScreen ? { backgroundImage: `url(${track.cover})` } : { display: 'none' }}></div>\n          <div className=\"ui grid bottom aligned container\">\n            <div\n              className=\"two wide column current-track-cover\"\n              style={{ backgroundImage: `url(${track.cover})`, width: \"96px\"}}\n            />\n            <div className=\"four wide centered column current-track-info\">\n              <p className=\"ui big header\">{track.title}</p>\n              <p className=\"ui subheader\">{track.artist}</p>\n            </div>\n            <Player src={track.url} />\n            <MediaControl toggleFullScreen={this.toggleFullScreen}/>\n            <div className=\"media-controls\">\n              <div className=\"media-control-group media-control-group--seek\">\n                <Progress className=\"media-control media-control--progress\"/>\n                <SeekBar className=\"media-control media-control--volume-range\"/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Media>\n    );\n  }\n}\n\nexport default MediaPlayer \n","export const data = [\n  {\n    id: 1,\n    url:\n      \"http://k006.kiwi6.com/hotlink/z840lvfmit/green_day_-_wake_me_up_when_september_ends_chris_.mp3\",\n    album: \"Itself\",\n    cover:\n    \"https://picsum.photos/id/1050/200\",\n    title: \"Great Pleasure\",\n    artist: \"Richard Green\",\n    duration: \"4:04\"\n  },\n  {\n    id: 2,\n    url: \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/557257/wwy.mp3\",\n    album: \"Solo\",\n    cover:\n    \"https://picsum.photos/id/1083/200\",\n    title: \"Mistaken Idea\",\n    artist: \"Richard Green\",\n    duration: \"3:12\"\n  },\n  {\n    id: 3,\n    url:\n      \"http://k003.kiwi6.com/hotlink/qfj1afql68/blue_moon_cover_-_Mikael_Levan_and_Julie_London.mp3\",\n    album: \"Solo\",\n    cover: \"https://picsum.photos/id/1083/200\",\n    title: \"Explorer Of The Truth\",\n    artist: \"Richard Green\",\n    duration: \"2:29\"\n  },\n  {\n    id: 4,\n    url:\n      \"http://k003.kiwi6.com/hotlink/qfj1afql68/blue_moon_cover_-_Mikael_Levan_and_Julie_London.mp3\",\n    album: \"Happiness\",\n    cover: \"https://picsum.photos/id/1038/200\",\n    title: \"Master Builder\",\n    artist: \"Richard Green\",\n    duration: \"2:29\"\n  },\n  {\n    id: 5,\n    url:\n      \"http://k003.kiwi6.com/hotlink/qfj1afql68/blue_moon_cover_-_Mikael_Levan_and_Julie_London.mp3\",\n    album: \"No More Excuses\",\n    cover: \"https://picsum.photos/id/1068/200\",\n    title: \"Because It Is Pain\",\n    artist: \"Richard Green\",\n    duration: \"2:29\"\n  }\n];\n","import React from \"react\";\n\nimport MediaPlayer from \"../MediaPlayer/MediaPlayer\";\nimport { data } from \"../../data\";\n\nclass TrackList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTrack: data[0],\n      isActive: false,\n    };\n    this.handleMusicOnChange = this.handleMusicOnChange.bind(this);\n  }\n  handleMusicOnChange(currentTrack) {\n    this.setState({\n      currentTrack,\n      isActive: !this.state.isActive\n    });\n  }\n\n  render() {\n    const { handleMusicOnChange } = this;\n    const { currentTrack, isActive } = this.state;\n    let item = \"item\";\n    return (\n      <div>\n        <div className=\"track-list block\">\n          <h1 className=\"ui header\">Top Songs</h1>\n          <div className=\"ui ordered huge middle aligned divided list\">\n            {data.map(track => (\n              <div \n                className={\n                  isActive && track.id === currentTrack.id ? (item += \" active\") : (item)\n                }\n                onClick={() => handleMusicOnChange(track)}\n              >\n                  <img src={track.cover} alt=\"albumcover\" className=\"ui mini rounded image\" />\n                  <div className=\"content\">{track.title}</div>\n                  <div className=\"right floated content\">\n                    {track.duration}\n                    <button className=\"ui icon black button\" style={{background:'none', color:'black'}}>\n                      <i className=\"play icon\"></i>\n                    </button>\n                  </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <MediaPlayer track={currentTrack} />\n      </div>\n    );\n  }\n}\n\nexport default TrackList;","import React from 'react';\nimport { data } from '../../data';\n\nconst Album = () => {\n  return (\n    <div className=\"block\">\n      <h1 className=\"ui header\">Albums</h1>\n      <div className=\"ui middle aligned grid\">\n        {data.map(album => (\n          <div className=\"five wide column\">\n            <img src={album.cover} alt=\"albumcover\" className=\"ui image\" />\n            <div className=\"ui header\">{album.album}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Album","import React from 'react';\nimport Artist from './components/Artist/Artist';\nimport TrackList from './components/Track/TrackList';\nimport Album from './components/Album/Album';\n\nfunction App() {\n  return (\n    <div className=\"ui grid stackable container\">\n      <div className=\"eight wide column\">\n        <div className=\"shade\"></div>\n        <div className=\"wrapper\">\n          <Artist />\n        </div>\n      </div>\n      <div className=\"eight wide column\">\n        <div className=\"wrapper\">\n          <TrackList />\n          <Album />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}