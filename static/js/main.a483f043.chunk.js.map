{"version":3,"sources":["components/Artist/Artist.js","components/Track/TimeStamps.js","components/Track/CurrentTrack.js","data.js","components/Track/TrackList.js","components/Album/Album.js","App.js","serviceWorker.js","index.js"],"names":["Artist","react_default","a","createElement","className","src","alt","TimeStamps","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","convertTime","timestamp","minutes","Math","floor","seconds","state","bind","assertThisInitialized","percentage","style","width","concat","React","Component","CurrentTrack","play","setState","audio","Audio","track","url","interval","setInterval","currentTime","pause","clearInterval","backgroundImage","cover","title","artist","background","onClick","paddingRight","Track_TimeStamps","data","id","album","duration","TrackList","currentTrack","isActive","handleMusicOnChange","_this$state","item","map","color","Track_CurrentTrack","Album","App","components_Artist_Artist","Track_TrackList","components_Album_Album","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a483f043.chunk.js","sourcesContent":["import React from 'react';\n\nconst Artist = () => {\n  return (\n    <div className=\"artist\">\n      <img src=\"https://picsum.photos/540\" alt=\"artist\" className=\"ui fluid image\"/>\n      <div className=\"ui huge header\">Richard Green</div>\n      <div className=\"ui bottom aligned grid\">\n        <div className=\"four wide column\">\n          <h3>FOLLOWERS</h3>\n          <div className=\"sub header\">5,790</div>\n        </div>\n        <div className=\"twelve wide column\">\n         <button className=\"ui black basic huge button\">FOLLOW</button>\n         <button className=\"ui orange huge button\">PLAY</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Artist","import React from \"react\";\n\nclass TimeStamps extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.convertTime = this.convertTime.bind(this);\n  }\n\n  convertTime = timestamp => {\n    let minutes = Math.floor(timestamp / 60);\n    let seconds = timestamp - minutes * 60;\n    if (seconds < 10) {\n      seconds = \"0\" + seconds;\n    }\n    timestamp = minutes + \":\" + seconds;\n    return timestamp;\n  };\n\n  render() {\n    const { percentage } = this.props;\n    return (\n      <div className=\"progress-bar\">\n        <div className=\"filler\" style={{ width: `${percentage}%` }} />\n      </div>\n    );\n  }\n}\n\nexport default TimeStamps;\n","import React from 'react';\nimport TimeStamps from \"./TimeStamps\";\n\nclass CurrentTrack extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      play: false,\n      currentTime: 0,\n      percentage: 0\n    };\n    this.play = this.play.bind(this);\n    this.pause = this.pause.bind(this);\n  }\n\n  play = () => {\n    this.setState({ play: true });\n    this.audio = new Audio(this.props.track.url);\n    this.audio.play();\n    this.interval = setInterval(() => {\n      this.setState({\n        currentTime: this.state.currentTime + 1,\n        percentage: this.state.percentage + 1\n      });\n    }, 1000);\n  };\n\n  pause = () => {\n    this.setState({ play: false });\n    this.audio.pause();\n    clearInterval(this.interval);\n  };\n\n  render() {\n    const { percentage } = this.state;\n    const { play, pause } = this;\n    const { track } = this.props;\n    return (\n      <div className=\"ui middle aligned grid current-track-container\">\n        <div\n          className=\"two wide column current-track-cover\"\n          style={{ backgroundImage: `url(${track.cover})` }}\n        />\n        <div className=\"four wide column current-track-info\">\n          <p className=\"ui big header\">{track.title}</p>\n          <p className=\"ui subheader\">{track.artist}</p>\n        </div>\n        <div className=\"eight wide column current-track-control\">\n          <button className=\"ui icon black big button\" style={{background:'none'}}>\n              <i className=\"step backward icon\"></i>\n          </button>\n          {this.state.play ? (\n            <button className=\"ui icon button cta\" onClick={pause}>\n              <i className=\"pause icon\"></i>\n            </button>\n          ) : (\n            <button className=\"ui icon button cta\" style={{paddingRight:'8px'}} onClick={play}>\n              <i className=\"play icon\"></i>\n            </button>\n          )}\n          <button className=\"ui icon black big button\" style={{background:'none'}}>\n          <i className=\"step forward icon\"></i>\n          </button>\n        </div>\n        <TimeStamps\n          percentage={percentage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CurrentTrack;\n","export const data = [\n  {\n    id: 1,\n    url:\n      \"http://k006.kiwi6.com/hotlink/z840lvfmit/green_day_-_wake_me_up_when_september_ends_chris_.mp3\",\n    album: \"Itself\",\n    cover:\n    \"https://picsum.photos/id/1050/200\",\n    title: \"Great Pleasure\",\n    artist: \"Richard Green\",\n    duration: \"4:04\"\n  },\n  {\n    id: 2,\n    url: \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/557257/wwy.mp3\",\n    album: \"Solo\",\n    cover:\n    \"https://picsum.photos/id/1083/200\",\n    title: \"Mistaken Idea\",\n    artist: \"Richard Green\",\n    duration: \"3:12\"\n  },\n  {\n    id: 3,\n    url:\n      \"http://k003.kiwi6.com/hotlink/qfj1afql68/blue_moon_cover_-_Mikael_Levan_and_Julie_London.mp3\",\n    album: \"Solo\",\n    cover: \"https://picsum.photos/id/1083/200\",\n    title: \"Explorer Of The Truth\",\n    artist: \"Richard Green\",\n    duration: \"2:29\"\n  },\n  {\n    id: 4,\n    url:\n      \"http://k003.kiwi6.com/hotlink/qfj1afql68/blue_moon_cover_-_Mikael_Levan_and_Julie_London.mp3\",\n    album: \"Happiness\",\n    cover: \"https://picsum.photos/id/1038/200\",\n    title: \"Master Builder\",\n    artist: \"Richard Green\",\n    duration: \"2:29\"\n  },\n  {\n    id: 5,\n    url:\n      \"http://k003.kiwi6.com/hotlink/qfj1afql68/blue_moon_cover_-_Mikael_Levan_and_Julie_London.mp3\",\n    album: \"No More Excuses\",\n    cover: \"https://picsum.photos/id/1068/200\",\n    title: \"Because It Is Pain\",\n    artist: \"Richard Green\",\n    duration: \"2:29\"\n  }\n];\n","import React from \"react\";\n\nimport CurrentTrack from \"./CurrentTrack\";\nimport { data } from \"../../data\";\n\nclass TrackList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTrack: data[0],\n      isActive: false,\n    };\n    this.handleMusicOnChange = this.handleMusicOnChange.bind(this);\n  }\n  handleMusicOnChange(currentTrack) {\n    this.setState({\n      currentTrack,\n      isActive: !this.state.isActive\n    });\n  }\n\n  render() {\n    const { handleMusicOnChange } = this;\n    const { currentTrack, isActive } = this.state;\n    let item = \"item\";\n    return (\n      <div>\n        <div className=\"track-list block\">\n          <h1 className=\"ui header\">Top Songs</h1>\n          <div className=\"ui ordered huge middle aligned divided list\">\n            {data.map(track => (\n              <div \n                className={\n                  isActive && track.id === currentTrack.id ? (item += \" active\") : (item)\n                }\n                onClick={() => handleMusicOnChange(track)}\n              >\n                  <img src={track.cover} alt=\"albumcover\" className=\"ui mini rounded image\" />\n                  <div className=\"content\">{track.title}</div>\n                  <div className=\"right floated content\">\n                    {track.duration}\n                    <button className=\"ui icon black button\" style={{background:'none', color:'black'}}>\n                      <i className=\"play icon\"></i>\n                    </button>\n                  </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <CurrentTrack track={currentTrack} />\n      </div>\n    );\n  }\n}\n\nexport default TrackList;","import React from 'react';\nimport { data } from '../../data';\n\nconst Album = () => {\n  return (\n    <div className=\"block\">\n      <h1 className=\"ui header\">Albums</h1>\n      <div className=\"ui middle aligned grid\">\n        {data.map(album => (\n          <div className=\"five wide column\">\n            <img src={album.cover} alt=\"albumcover\" className=\"ui image\" />\n            <div className=\"ui header\">{album.album}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Album","import React from 'react';\nimport Artist from './components/Artist/Artist';\nimport TrackList from './components/Track/TrackList';\nimport Album from './components/Album/Album';\n\nfunction App() {\n  return (\n    <div className=\"ui grid stackable container\">\n      <div className=\"eight wide column\">\n        <div className=\"shade\"></div>\n        <div className=\"wrapper\">\n          <Artist />\n        </div>\n      </div>\n      <div className=\"eight wide column\">\n        <div className=\"wrapper\">\n          <TrackList />\n          <Album />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}