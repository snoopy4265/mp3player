{"version":3,"sources":["images/artist.jpg","components/Artist/Artist.js","components/MediaPlayer/MediaControl.js","components/MediaPlayer/MediaPlayer.js","components/Track/TrackList.js","data.js","components/Album/Album.js","containers/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Artist","react_default","a","createElement","className","src","artist","alt","Volume","controls","MediaControl","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlePlayPause","media","playPause","handlePrevTrack","onPrevTrack","handleNextTrack","onNextTrack","state","bind","assertThisInitialized","_this$props","toggleFullScreen","isFullScreen","onClick","isPlaying","style","verticalAlign","React","Component","withMediaProps","SeekBar","MediaPlayer","setState","currentTrack","mediaPlayerContainerClass","react_media_player","backgroundImage","concat","cover","display","title","width","url","MediaPlayer_MediaControl","mod","num","max","TrackList","handleMusicClick","isActive","navigatePlaylist","direction","newIndex","playList","indexOf","length","map","track","id","duration","background","color","components_MediaPlayer_MediaPlayer","data","album","Album","Wrapper","components_Artist_Artist","Track_TrackList","components_Album_Album","App","containers_Wrapper","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ee73b79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/artist.333c8f45.jpg\";","import React from 'react';\nimport artist from '../../images/artist.jpg'\n\nconst Artist = () => {\n  return (\n    <div className=\"artist\">\n      <img src={artist} alt=\"artist\" className=\"ui fluid image\"/>\n      <div className=\"ui huge header\">Richard Green</div>\n      <div className=\"ui bottom aligned grid\">\n        <div className=\"four wide column\">\n          <h3>FOLLOWERS</h3>\n          <div className=\"sub header\">5,790</div>\n        </div>\n        <div className=\"twelve wide column\">\n         <button className=\"ui black basic huge button\">FOLLOW</button>\n         <button className=\"ui orange huge button\">PLAY</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Artist","import React from 'react';\nimport { withMediaProps, controls } from 'react-media-player';\nconst { Volume } = controls;\n\nclass MediaControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n    this.handlePlayPause = this.handlePlayPause.bind(this);\n    this.handlePrevTrack = this.handlePrevTrack.bind(this);\n    this.handleNextTrack = this.handleNextTrack.bind(this);\n  }\n\n  handlePlayPause = () => {\n    this.props.media.playPause();\n  }\n\n  handlePrevTrack = () => {\n    this.props.onPrevTrack()\n  }\n\n  handleNextTrack = () => {\n    this.props.onNextTrack()\n  }\n\n\n  render() {\n    const { media, toggleFullScreen, isFullScreen } = this.props;\n    const { handlePlayPause, handlePrevTrack, handleNextTrack } = this;\n    return (\n      <div className=\"ten wide column current-track-control middle aligned ui grid\">\n        <div className=\"seven wide column\">\n          {/* TODO random button */}\n          { isFullScreen && (\n            <button className=\"ui icon black big button\">\n              <i className=\"random icon\"></i>\n            </button>\n          )}\n          <button className=\"ui icon black big button\" onClick={handlePrevTrack}>\n            <i className=\"step backward icon\"></i>\n          </button>\n          <button className=\"ui icon button cta\" onClick={handlePlayPause}>\n            { media.isPlaying ? <i className=\"pause icon\"></i> : <i className=\"play icon\"></i> }\n          </button>\n          <button className=\"ui icon black big button\" onClick={handleNextTrack}>\n            <i className=\"step forward icon\"></i>\n          </button>\n          {/* TODO repeat button */}\n          { isFullScreen && (\n            <button className=\"ui icon black big button\" onClick={handlePrevTrack}>\n              <i className=\"retweet icon\"></i>\n            </button>\n          )}\n        </div>\n        <div className=\"nine wide right aligned column\">\n          <i className=\"volume up icon\"></i>\n          <Volume />\n          <button className=\"ui icon button\" onClick={toggleFullScreen}>\n            <i className=\"expand icon\" style={{verticalAlign: \"text-top\"}}></i>\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withMediaProps(MediaControl)","import React from 'react';\nimport { Media, Player, controls } from 'react-media-player';\nimport MediaControl from './MediaControl';\nconst { SeekBar } = controls;\n\nclass MediaPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFullScreen: false,\n    };\n  }\n\n  toggleFullScreen = () => {\n    this.setState({\n      isFullScreen: !this.state.isFullScreen,\n    })\n  }\n\n  render() {\n    const { isFullScreen } = this.state;\n    const { currentTrack, onPrevTrack, onNextTrack } = this.props;\n    let mediaPlayerContainerClass = \"ui middle aligned grid current-track-container\";\n    if (this.state.isFullScreen) {\n      mediaPlayerContainerClass = \"ui bottom aligned grid current-track-container fullscreen\";\n    }\n    return (\n      <Media>\n        <div className={mediaPlayerContainerClass}>\n          <div className=\"current-track-container-bg\" style={ isFullScreen ? { backgroundImage: `url(${currentTrack.cover})` } : { display: 'none' }}></div>\n          { isFullScreen && (\n            <div className=\"ui top centered aligned row\">\n              <div className=\"current-track-fullscreen-header\">\n                <h1 className=\"ui huge header\">{currentTrack.title}</h1>\n                <h3>{currentTrack.artist}</h3>\n              </div>\n            </div>\n          )}\n          <div className=\"ui grid bottom aligned container\">\n            <div\n              className=\"two wide column current-track-cover\"\n              style={{ backgroundImage: `url(${currentTrack.cover})`, width: \"96px\"}}\n            />\n            <div className=\"four wide centered column current-track-info\">\n              <p className=\"ui big header\">{currentTrack.title}</p>\n              <p className=\"ui subheader\">{currentTrack.artist}</p>\n            </div>\n            <Player src={currentTrack.url} />\n            <MediaControl \n              isFullScreen={isFullScreen}\n              toggleFullScreen={this.toggleFullScreen}\n              onPrevTrack={onPrevTrack}\n              onNextTrack={onNextTrack}\n            />\n            <SeekBar \n              className=\"progress-bar\"\n              \n            />\n          </div>\n        </div>\n      </Media>\n    );\n  }\n}\n\nexport default MediaPlayer \n","import React from \"react\";\nimport MediaPlayer from \"../MediaPlayer/MediaPlayer\";\n\nconst mod = (num, max) => ((num % max) + max) % max;\n\nclass TrackList extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTrack: this.props.playList[0],\n      isActive: false,\n    };\n    this.handleMusicClick = this.handleMusicClick.bind(this);\n  }\n\n  handleMusicClick = (currentTrack) => {\n    this.setState({\n      currentTrack,\n      isActive: !this.state.isActive\n    });\n  }\n\n  navigatePlaylist = direction => {\n    const newIndex = mod(\n      this.props.playList.indexOf(this.state.currentTrack) + direction,\n      this.props.playList.length\n    )\n    this.setState({ currentTrack: this.props.playList[newIndex] })\n  }\n\n  render() {\n    const { handleMusicClick, navigatePlaylist } = this;\n    const { currentTrack } = this.state;\n    const { playList } = this.props;\n    return (\n      <div>\n        <div className=\"track-list block\">\n          <h1 className=\"ui header\">Top Songs</h1>\n          <div className=\"ui ordered huge middle aligned divided list\">\n            { playList.map( track => (\n              <div className=\"item\" onClick={() => handleMusicClick(track)}>\n                <img src={track.cover} alt=\"albumcover\" className=\"ui mini rounded image\" />\n                <div className={track.id === currentTrack.id ? (\"content track-title active\") : (\"content track-title\")}>{track.title}</div>\n                <div className=\"right floated content\">\n                  {track.duration}\n                  <button className=\"ui icon black button\" style={{background:'none', color:'black'}}>\n                    <i className=\"play icon\"></i>\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <MediaPlayer \n          currentTrack={currentTrack} \n          onPrevTrack={() => navigatePlaylist(-1)}\n          onNextTrack={() => navigatePlaylist(1)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TrackList;","export const data = [\n  {\n    id: 1,\n    url:\n      \"http://k006.kiwi6.com/hotlink/89egzfld8n/Fragile.mp3\",\n    album: \"Itself\",\n    cover:\n    \"https://picsum.photos/id/1050/200\",\n    title: \"Great Pleasure\",\n    artist: \"Richard Green\",\n    duration: \"4:04\"\n  },\n  {\n    id: 2,\n    url: \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/557257/wwy.mp3\",\n    album: \"Solo\",\n    cover:\n    \"https://picsum.photos/id/1083/200\",\n    title: \"Mistaken Idea\",\n    artist: \"Richard Green\",\n    duration: \"3:12\"\n  },\n  {\n    id: 3,\n    url:\n      \"http://k007.kiwi6.com/hotlink/6529rqo083/I_Want_You.mp3\",\n    album: \"Solo\",\n    cover: \"https://picsum.photos/id/1083/200\",\n    title: \"Explorer Of The Truth\",\n    artist: \"Richard Green\",\n    duration: \"2:29\"\n  },\n  {\n    id: 4,\n    url:\n      \"http://k007.kiwi6.com/hotlink/99w9t8lq4m/CHASING_MY_SUNSHINE.mp3\",\n    album: \"Happiness\",\n    cover: \"https://picsum.photos/id/1038/200\",\n    title: \"Master Builder\",\n    artist: \"Richard Green\",\n    duration: \"4:12\"\n  },\n  {\n    id: 5,\n    url:\n      \"http://k003.kiwi6.com/hotlink/sos4pc4540/Never_Been_to_Chicago.mp3\",\n    album: \"No More Excuses\",\n    cover: \"https://picsum.photos/id/1068/200\",\n    title: \"Because It Is Pain\",\n    artist: \"Richard Green\",\n    duration: \"3:45\"\n  }\n];\n","import React from 'react';\nimport { data } from '../../data';\n\nconst Album = () => {\n  return (\n    <div className=\"block\">\n      <h1 className=\"ui header\">Albums</h1>\n      <div className=\"ui middle aligned grid\">\n        {data.map(album => (\n          <div className=\"five wide column\">\n            <img src={album.cover} alt=\"albumcover\" className=\"ui image\" />\n            <div className=\"ui header\">{album.album}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Album","import React from \"react\";\nimport Artist from '../components/Artist/Artist';\nimport TrackList from '../components/Track/TrackList';\nimport Album from '../components/Album/Album';\n\nimport { data } from \"../data\";\n\n\nclass Wrapper extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      playList: data,\n    };\n  }\n\n\n  render() {\n    const { playList } = this.state;\n    return (\n      <div className=\"ui grid stackable container\">\n        <div className=\"eight wide column\">\n          <div className=\"shade\"></div>\n          <div className=\"wrapper\">\n            <Artist />\n          </div>\n        </div>\n        <div className=\"eight wide column\">\n          <div className=\"wrapper\">\n            <TrackList playList={playList}/>\n            <Album />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Wrapper;","import React from 'react';\nimport Wrapper from './containers/Wrapper';\n\n\nfunction App() {\n  return (\n    <Wrapper/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}